[opc@internal-idp conf]$ cat deployment.toml
[server]
hostname = "168.138.70.107"
node_ip = "127.0.0.1"
base_path = "https://$ref{server.hostname}:${carbon.management.port}"
offset = 0

[super_admin]
username = "admin"
password = "admin"
create_admin_account = true

[user_store]
# type = "database" doesn't work
type = "database_unique_id"

[database.user]
url = "jdbc:postgresql://168.138.93.145:5432/postgres?sslmode=disable&amp;currentSchema=shared-db"
username = "postgres"
password = "root"
driver = "org.postgresql.Driver"

[realm_manager]
data_source = "WSO2USER_DB"

[database.identity_db]
type = "postgre"
url = "jdbc:postgresql://168.138.93.145:5432/postgres?sslmode=disable&amp;currentSchema=identity-db"
username = "postgres"
password = "root"
[database.identity_db.pool_options]
validationQuery = "SELECT 1; COMMIT"
pool_options.maxActive = "300"
pool_options.maxWait = "60000"
pool_options.minIdle = "5"
pool_options.testOnBorrow = true
pool_options.validationInterval="30000"
pool_options.defaultAutoCommit=false
pool_options.jdbcInterceptors = "org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=30)"
pool_options.commitOnReturn=true
pool_options.rollbackOnReturn=false
pool_options.logAbandoned=true
pool_options.removeAbandoned=true
pool_options.removeAbandonedTimeout="120000"

[database.shared_db]
type = "postgre"
url = "jdbc:postgresql://168.138.93.145:5432/postgres?sslmode=disable&amp;currentSchema=shared-db"
username = "postgres"
password = "root"
[database.shared_db.pool_options]
validationQuery = "SELECT 1; COMMIT"
pool_options.maxActive = "300"
pool_options.maxWait = "60000"
pool_options.minIdle = "5"
pool_options.testOnBorrow = true
pool_options.validationInterval="30000"
pool_options.defaultAutoCommit=false
pool_options.jdbcInterceptors = "org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=30)"
pool_options.commitOnReturn=true
pool_options.rollbackOnReturn=false
pool_options.logAbandoned=true
pool_options.removeAbandoned=true
pool_options.removeAbandonedTimeout="120000"

[database.bps_database]
type = "postgre"
url = "jdbc:postgresql://168.138.93.145:5432/postgres?sslmode=disable&amp;currentSchema=jpadb"
username = "postgres"
password = "root"
driver = "org.postgresql.Driver"
[database.bps_database.pool_options]
validationQuery = "SELECT 1; COMMIT"
pool_options.maxActive = "300"
pool_options.maxWait = "60000"
pool_options.minIdle = "5"
pool_options.testOnBorrow = true
pool_options.validationInterval="30000"
pool_options.defaultAutoCommit=false
pool_options.jdbcInterceptors = "org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=30)"
pool_options.commitOnReturn=true
pool_options.rollbackOnReturn=false
pool_options.logAbandoned=true
pool_options.removeAbandoned=true
pool_options.removeAbandonedTimeout="120000"

[[datasource]]
id = "WSO2ConsentDS"
type = "postgre"
url = "jdbc:postgresql://168.138.93.145:5432/postgres?currentSchema=identity-db"
username = "postgres"
password = "root"
driver = "org.postgresql.Driver"
pool_options.validationQuery = "SELECT 1; COMMIT"
pool_options.maxActive = "300"
pool_options.maxWait = "60000"
pool_options.minIdle = "5"
pool_options.testOnBorrow = true
pool_options.validationInterval="30000"
pool_options.defaultAutoCommit=false
pool_options.jdbcInterceptors = "org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=30)"
pool_options.commitOnReturn=true
pool_options.rollbackOnReturn=false
pool_options.logAbandoned=true
pool_options.removeAbandoned=true
pool_options.removeAbandonedTimeout="120000"

[authentication.consent]
data_source="jdbc/WSO2ConsentDS"

[event.default_listener.application_authentication]
enable = "True"

[identity_mgt.events.schemes.analyticsLoginDataPublisher.properties]
enable = "False"

[identity_mgt.events.schemes.analyticsSessionDataPublisher.properties]
enable = "False"

[keystore.primary]
name = "wso2carbon.jks"
type = "JKS"
password = "wso2carbon"
alias = "wso2carbon"
key_password = "wso2carbon"

[keystore.internal]
filename = "wso2carbon.jks"
type = "JKS"
password = "wso2carbon"
alias = "wso2carbon"
key_password = "wso2carbon"

[truststore]
file_name = "client-truststore.jks"
type = "JKS"
password = "wso2carbon"

[transport.http.properties]
maxThreads = "250"
acceptCount = "200"

[transport.https.properties]
maxThreads = "250"
acceptCount = "200"

## Configure the Traffic Manager endpoints ##
[[event_listener]]
id = "token_revocation"
type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
name = "org.wso2.is.notification.ApimOauthEventInterceptor"
order = 1

[[resource.access_control]]
context = "(.)/keymanager-operations/user-info/claims(.)"
secure = true
http_method = "GET"
permissions = "/permission/admin/manage/identity/usermgt/list"
scopes = "internal_user_mgt_list"

[[resource.access_control]]
context = "(.*)/keymanager-operations/user-info/claims/generate"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/usermgt/list"
scopes = "internal_user_mgt_list"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/applicationmgt/create"
scopes = "internal_application_mgt_create"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "GET"
permissions = "/permission/admin/manage/identity/applicationmgt/view"
scopes = "internal_application_mgt_view"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "DELETE"
permissions = "/permission/admin/manage/identity/applicationmgt/delete"
scopes = "internal_application_mgt_delete"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "PUT"
permissions = "/permission/admin/manage/identity/applicationmgt/update"
scopes = "internal_application_mgt_update"

[[resource.access_control]]
context = "(.)/keymanager-operations/dcr/register(.)"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/applicationmgt/update"
scopes = "internal_application_mgt_update"

[tenant_context.rewrite]
custom_webapps = ["/keymanager-operations/"]

## Configure the event listener endpoint to publish controller events to the Traffic Manager ##
[event_listener.properties]
notification_endpoint = "https://168.138.89.205:9443/internal/data/v1/notify"
username = "${admin.username}"
password = "${admin.password}"
'header.X-WSO2-KEY-MANAGER' = "WSO2-IS"

[carbon_health_check]
enable= true[opc@internal-idp conf]$
